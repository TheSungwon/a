**[NCS]자바 안드로이드 웹 & 앱 개발자 과정**

**MVC 게시판 + 로그인/로그아웃/회원가입의 전체 동작 로직**
 : 설정 : 컨트롤러  properties파일(URL:액션클래스 매핑)  web.xml
 : hello.do
 : 컨트롤러 ==> Action클래스 ==> JSP
 : *게시판에 검색 + 댓글로직 추가.
 : *회원가입에 우편번호 로직 추가.

[[[ControllerUsingURI]]] <==== commandHandlerURI.properties
            ||
/MVC/list.do=ezen.action.ListAction ===> list.jsp
/MVC/writeForm.do=ezen.action.WriteFormAction ===> writeForm.jsp
/MVC/writePro.do=ezen.action.WriteProAction ===> writePro.jsp
/MVC/content.do=ezen.action.ContentAction ===> content.jsp
/MVC/updateForm.do=ezen.action.UpdateFormAction ===> updateForm.jsp
/MVC/updatePro.do=ezen.action.UpdateProAction ===> updatePro.jsp
/MVC/deleteForm.do=ezen.action.DeleteFormAction ===> deleteForm.jsp
/MVC/deletePro.do=ezen.action.DeleteProAction ===> deletePro.jsp
NullAction ===> /view/nullCommand.jsp

/logon2/main.do=ezen.action.LogonMainAction ===> main.jsp
/logon2/inputForm.do=ezen.action.LogonInputFormAction ===> inputForm.jsp
/logon2/inputPro.do=ezen.action.LogonInputProAction ===> inputPro.jsp
/logon2/confirmId.do=ezen.action.ConfirmIdAction ===> confirmId.jsp
/logon2/loginForm.do=ezen.action.LoginFormAction ===> loginForm.jsp
/logon2/loginPro.do=ezen.action.LoginProAction ===> loginPro.jsp
/logon2/logout.do=ezen.action.LogoutAction ===> logout.jsp
/logon2/modify.do=ezen.action.LogonModifyAction ===> modify.jsp
/logon2/modifyForm.do=ezen.action.LogonModifyFormAction ===> modifyForm.jsp
/logon2/modifyPro.do=ezen.action.LogonModifyProAction ===> modifyPro.jsp
/logon2/deleteForm.do=ezen.action.LogonDeleteFormAction ===> deleteForm.jsp
/logon2/deletePro.do=ezen.action.LogonDeleteProAction ===> deletePro.jsp

http://localhost:8080/EZEN/MVC/list.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/list.do =====> ezen.action.ListAction(BoardDataBean, BoardDBBean)
3. list.jsp(EL,JSTL)

*****게시판만들기*****
1.패턴 : Model2(MVC) 


2.Table : board
  Sequence : board_num

create table board(
num number not null primary key, //글번호
writer varchar2(10) not null, //글작성자
email varchar2(20), //이메일
subject varchar2(50) not null, //글제목
passwd varchar2(12) not null, //비밀번호
reg_date date not null, //글작성일
readcount number default 0, //조회수
ref number not null, // 메인글과 답변글을 묶어준다.
re_step number not null, // 화면출력순서
re_level number not null, // 메인글인지, 답변글인지를 구분해준다. 
content varchar2(4000) not null, //글내용
ip varchar2(20) not null // 글작성자의 IP주소
);

create sequence board_num;
  
3.JavaBean
  : 저장빈 : ezen.board.BoardDataBean
  : 처리빈 : ezen.board.BoardDBBean
   - BoardDBBean getInstance() : Singleton Pattern
   - Connection getConnection() : 커넥션풀로부터 커넥션 하나를 임대
   - void insertArticle(BoardDataBean b) : 게시물 입력
   - int getArticleCount() : 입력글의 갯수를 리턴
   [검색]- int getArticleCount(int n, String searchKeyword) : 입력글의 갯수를 리턴(검색)
   - List getArticles(int s,int e) : s부터 e까지의 데이터를 가져오는....
   [검색]- List getArticles(int s,int e,int n, String searchKeyword) : 검색된 글의 s부터 e까지의 데이터를 가져오는....
   - BoardDataBean getArticle(int num) : 글번호의 해당하는 데이터 한줄을 가져오는....
   - BoardDataBean updateGetArticle(int num) : 수정하기 위한 데이터 한줄을 가져오는...
   - int updateArticle(BoardDataBean b) : 수정
   - int deleteArticle(int num, String passwd) : 삭제

[BoardDataBean.java]
package ezen.board;

import java.sql.Timestamp;

public class BoardDataBean{
    private int num;
    private String writer;
    private String subject;
    private String email;
    private String content;
    private String passwd;
    private Timestamp reg_date;
    private int readcount;
    private String ip;
    private int ref;
    private int re_step;
    private int re_level;

    public void setNum(int num){
    	this.num=num;
    }
    public void setWriter (String writer) {
        this.writer = writer;
    }
    public void setSubject (String subject) {
        this.subject = subject;
    }
    public void setEmail (String email) {
        this.email = email;
    }
    public void setContent (String content) {
        this.content = content;
    }
    public void setPasswd (String passwd) {
        this.passwd = passwd;
    }
    public void setReg_date (Timestamp reg_date) {
        this.reg_date = reg_date;
    }
    public void setReadcount(int readcount){
    	this.readcount=readcount;
    }
    public void setIp (String ip) {
        this.ip = ip;
    }
    public void setRef (int ref) {
        this.ref = ref;
    }
    public void setRe_level (int re_level) {
        this.re_level=re_level;
    }
    public void setRe_step (int re_step) {
        this.re_step=re_step;
    }
   
    public int getNum(){
    	return num;
    }
    public int getReadcount(){
       return readcount;
    }
    public String getWriter () {
        return writer;
    }
    public String getSubject () {
        return subject;
    }
    public String getEmail () {
        return email;
    }
    public String getContent () {
        return content;
    }
    public String getPasswd () {
        return passwd;
    }
    public Timestamp getReg_date () {
        return reg_date;
    }
    public String getIp () {
        return ip;
    }
    public int getRef () {
        return ref;
    }
    public int getRe_level () {
        return re_level;
    }
    public int getRe_step () {
        return re_step;
    }       
}


[BoardDBBean.java] 
package ezen.board;

import java.sql.*;
import java.util.*;

public class BoardDBBean {   
	//Singleton Pattern
    private static BoardDBBean instance = new BoardDBBean();
   
    // BoardDBBean board = BoardDBBean.getInstance();
    public static BoardDBBean getInstance() {
        return instance;
    }
   
    private BoardDBBean() {
    }
   
    private Connection getConnection() throws Exception {
    	String jdbcDriver = "jdbc:apache:commons:dbcp:/pool";         
        return DriverManager.getConnection(jdbcDriver);
    }
    
    //writePro.jsp
    public void insertArticle(BoardDataBean article) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        
        //답변글인지 일반글인지를 구분해서 입력시켜주는 로직!!!
		int num=article.getNum();
		int ref=article.getRef();
		int re_step=article.getRe_step();
		int re_level=article.getRe_level();
		int number=0;
        String sql="";

        try {
            conn = getConnection();

            pstmt = conn.prepareStatement("select max(num) from board");
            rs = pstmt.executeQuery();

		    if (rs.next())
		      number=rs.getInt(1)+1;
		    else
		      number=1;
  
		    if (num!=0) //답변글이라면....
		    { 
		      sql="update board set re_step=re_step+1 where ref= ? and re_step> ?";
		      pstmt = conn.prepareStatement(sql);
		      pstmt.setInt(1, ref);
		      pstmt.setInt(2, re_step);
		      pstmt.executeUpdate();
		      re_step=re_step+1;
		      re_level=re_level+1;
		    }else{
		      ref=number;
		      re_step=0;
		      re_level=0;
		    }
            // 쿼리를 작성
            sql = "insert into board(num,writer,email,subject,passwd,reg_date,";
            sql+="ref,re_step,re_level,content,ip) values(board_num.NEXTVAL,?,?,?,?,?,?,?,?,?,?)";

            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, article.getWriter());
            pstmt.setString(2, article.getEmail());
            pstmt.setString(3, article.getSubject());
            pstmt.setString(4, article.getPasswd());
            pstmt.setTimestamp(5, article.getReg_date());
            pstmt.setInt(6, ref);
            pstmt.setInt(7, re_step);
            pstmt.setInt(8, re_level);
            pstmt.setString(9, article.getContent());
            pstmt.setString(10, article.getIp());

            pstmt.executeUpdate();
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
        	if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
    }
   
    //list.jsp : 페이징을 위해서 전체 테이블에 입력된 행의수가 필요하다...!!!
    public int getArticleCount() throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        int x=0;

        try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement("select count(*) from board");
            rs = pstmt.executeQuery();

            if (rs.next()) {
               x= rs.getInt(1);
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
        return x;
    }
    
    public int getArticleCount(int n, String searchKeyword) throws Exception{
		
		Connection conn = null;
		PreparedStatement pstmt =null;
		ResultSet rs = null;
		
		String[] column_name = {"writer","subject","content"};
		
		int x = 0;
		
		try
		{
			conn = getConnection();
			pstmt = conn.prepareStatement("select count(*) from board where "+column_name[n]+" like '%"+searchKeyword+"%'");
			
			rs = pstmt.executeQuery();
			
			if(rs.next())
				x = rs.getInt(1);
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
		finally
		{
			if(rs != null) try {rs.close();} catch(SQLException ex){}
			if(pstmt != null) try {pstmt.close();} catch(SQLException ex){}
			if(conn != null) try {conn.close();} catch(SQLException ex){}
		}
		return x;
	}
	
    //list.jsp ==> Paging!!! DB로부터 여러행을 결과로 받는다.
    public List<BoardDataBean> getArticles(int start, int end) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        List<BoardDataBean> articleList=null;
        try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement(
            " select num,writer,email,subject,passwd,reg_date,ref,re_step,re_level,content,ip,readcount,r " +
            " from (select num,writer,email,subject,passwd,reg_date,ref,re_step,re_level,content,ip,readcount,rownum r " +
            " from (select num,writer,email,subject,passwd,reg_date,ref,re_step,re_level,content,ip,readcount " +
            " from board order by ref desc, re_step asc) order by ref desc, re_step asc ) where r >= ? and r <= ? ");
            pstmt.setInt(1, start);
            pstmt.setInt(2, end);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                articleList = new ArrayList<BoardDataBean>(end);
                do{
                  BoardDataBean article= new BoardDataBean();
                  article.setNum(rs.getInt("num"));
                  article.setWriter(rs.getString("writer"));
                  article.setEmail(rs.getString("email"));
                  article.setSubject(rs.getString("subject"));
                  article.setPasswd(rs.getString("passwd"));
                  article.setReg_date(rs.getTimestamp("reg_date"));
                  article.setReadcount(rs.getInt("readcount"));
                  article.setRef(rs.getInt("ref"));
                  article.setRe_step(rs.getInt("re_step"));
                  article.setRe_level(rs.getInt("re_level"));
                  article.setContent(rs.getString("content"));
                  article.setIp(rs.getString("ip"));
 
                  articleList.add(article);
                }while(rs.next());
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
        	//JdbcUtil.close(rs);
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
        return articleList;
    }
    
    public List getArticles(int start, int end, int n, String searchKeyword) throws Exception
	{
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		List articleList = null;
		
		String[] column_name = {"writer","subject","content"};
		
		try
		{
			conn = getConnection();
			
			String sql = "select num,writer,email,subject,passwd,reg_date,ref,re_step,re_level,content,ip,readcount,r "	
						+ "from (select num,writer,email,subject,passwd,reg_date,ref,re_step,re_level,content,ip,readcount,rownum r "
						+"from (select num,writer,email,subject,passwd,reg_date,ref,re_step,re_level,content,ip,readcount "
						+"from board order by ref desc, re_step asc) where "+column_name[n]+" like '%"+searchKeyword+"%' order by ref desc, re_step asc ) where r >= ? and r <= ?";
			
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, start);
			pstmt.setInt(2,	end);
			
			rs = pstmt.executeQuery();
			
			if(rs.next())
			{
				articleList = new ArrayList(end);
				
				do{
					BoardDataBean article = new BoardDataBean();
					
					article.setNum(rs.getInt("num"));
					article.setWriter(rs.getString("writer"));
					article.setEmail(rs.getString("email"));
					article.setSubject(rs.getString("subject"));
					article.setPasswd(rs.getString("passwd"));
					article.setReg_date(rs.getTimestamp("reg_date"));
					article.setReadcount(rs.getInt("readcount"));
					article.setRef(rs.getInt("ref"));
					article.setRe_step(rs.getInt("re_step"));
					article.setRe_level(rs.getInt("re_level"));
					article.setContent(rs.getString("content"));
					article.setIp(rs.getString("ip"));
					
					
					articleList.add(article);
				}while(rs.next());
				
			}
			
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
		finally
		{
			if(rs != null) try {rs.close();} catch(SQLException ex){}
			if(pstmt != null) try {pstmt.close();} catch(SQLException ex){}
			if(conn != null) try {conn.close();} catch(SQLException ex){}
		}
		
		return articleList;
	}
	

    //content.jsp : DB로부터 한줄의 데이터를 가져온다.
    public BoardDataBean getArticle(int num) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        BoardDataBean article=null;
        try {
            conn = getConnection();

            pstmt = conn.prepareStatement(
            "update board set readcount=readcount+1 where num = ?");
            pstmt.setInt(1, num);
            pstmt.executeUpdate();

            pstmt = conn.prepareStatement(
            "select * from board where num = ?");
            pstmt.setInt(1, num);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                article = new BoardDataBean();
                article.setNum(rs.getInt("num"));
                article.setWriter(rs.getString("writer"));
                article.setEmail(rs.getString("email"));
                article.setSubject(rs.getString("subject"));
                article.setPasswd(rs.getString("passwd"));
                article.setReg_date(rs.getTimestamp("reg_date"));
                article.setReadcount(rs.getInt("readcount"));
                article.setRef(rs.getInt("ref"));
                article.setRe_step(rs.getInt("re_step"));
                article.setRe_level(rs.getInt("re_level"));
                article.setContent(rs.getString("content"));
                article.setIp(rs.getString("ip"));    
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
        	if(rs != null) try {rs.close();} catch(SQLException ex){}
			if(pstmt != null) try {pstmt.close();} catch(SQLException ex){}
			if(conn != null) try {conn.close();} catch(SQLException ex){}
        }
        return article;
    }

    //updateForm.jsp : 수정폼에 한줄의 데이터를 가져올때.
    public BoardDataBean updateGetArticle(int num) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        BoardDataBean article=null;
        try {
            conn = getConnection();

            pstmt = conn.prepareStatement(
            "select * from board where num = ?");
            pstmt.setInt(1, num);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                article = new BoardDataBean();
                article.setNum(rs.getInt("num"));
                article.setWriter(rs.getString("writer"));
                article.setEmail(rs.getString("email"));
                article.setSubject(rs.getString("subject"));
                article.setPasswd(rs.getString("passwd"));
                article.setReg_date(rs.getTimestamp("reg_date"));
                article.setReadcount(rs.getInt("readcount"));
                article.setRef(rs.getInt("ref"));
                article.setRe_step(rs.getInt("re_step"));
                article.setRe_level(rs.getInt("re_level"));
                article.setContent(rs.getString("content"));
                article.setIp(rs.getString("ip"));    
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
        return article;
    }

    //updatePro.jsp : 실제 데이터를 수정하는 메소드.
    public int updateArticle(BoardDataBean article) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs= null;

        String dbpasswd="";
        String sql="";
        int x=-1;
        try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement(
            "select passwd from board where num = ?");
            pstmt.setInt(1, article.getNum());
            rs = pstmt.executeQuery();
           
            if(rs.next()){
            	dbpasswd= rs.getString("passwd");
            	if(dbpasswd.equals(article.getPasswd())){
			        sql="update board set writer=?,email=?,subject=?,passwd=?";
			        sql+=",content=? where num=?";
	                pstmt = conn.prepareStatement(sql);
	
	                pstmt.setString(1, article.getWriter());
	                pstmt.setString(2, article.getEmail());
	                pstmt.setString(3, article.getSubject());
	                pstmt.setString(4, article.getPasswd());
	                pstmt.setString(5, article.getContent());
	                pstmt.setInt(6, article.getNum());
	                pstmt.executeUpdate();
	                x= 1;
				}else{
					x= 0;
				}
          }
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
        	if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
        return x;
    }
   
    //deletePro.jsp : 실제 데이터를 삭제하는 메소드...
    public int deleteArticle(int num, String passwd) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs= null;
        String dbpasswd="";
        int x=-1;
        try {
        	conn = getConnection();

            pstmt = conn.prepareStatement(
            "select passwd from board where num = ?");
            pstmt.setInt(1, num);
            rs = pstmt.executeQuery();
           
            if(rs.next()){
            	dbpasswd= rs.getString("passwd");
            	if(dbpasswd.equals(passwd)){
            		pstmt = conn.prepareStatement(
                  "delete from board where num=?");
                    pstmt.setInt(1, num);
                    pstmt.executeUpdate();
                    x= 1; //글삭제 성공
				}else
				    x= 0; //비밀번호 틀림
				}
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
        return x;
    }
}

4./WEB-INF/commandHandlerURI.properties작성
/MVC/list.do=ezen.action.ListAction
/MVC/writeForm.do=ezen.action.WriteFormAction
/MVC/writePro.do=ezen.action.WriteProAction
/MVC/content.do=ezen.action.ContentAction
/MVC/updateForm.do=ezen.action.UpdateFormAction
/MVC/updatePro.do=ezen.action.UpdateProAction
/MVC/deleteForm.do=ezen.action.DeleteFormAction
/MVC/deletePro.do=ezen.action.DeleteProAction

5.Controller
[ControllerUsingURI2.java]
package ezen.controller;

import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Properties;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.action.CommandAction;
import ezen.action.NullAction;

public class ControllerUsingURI2 extends HttpServlet {
   
    private Map commandMap = new HashMap();//명령어와 명령어 처리 클래스를 쌍으로 저장

    //명령어와 처리클래스가 매핑되어 있는 properties 파일을 읽어서 Map객체인 commandMap에 저장
    //명령어와 처리클래스가 매핑되어 있는 properties 파일은 Command.properties파일
    public void init(ServletConfig config) throws ServletException {
	
        String props = config.getInitParameter("configFile2");//web.xml에서 propertyConfig에 해당하는 init-param 의 값을 읽어옴
        Properties pr = new Properties();//명령어와 처리클래스의 매핑정보를 저장할 Properties객체 생성
        FileInputStream f = null;
        try {
            String configFilePath = config.getServletContext().getRealPath(
					props);		
            f = new FileInputStream(configFilePath); //Command.properties파일의 내용을 읽어옴
            pr.load(f);//Command.properties파일의 정보를  Properties객체에 저장
        } catch (IOException e) {
            throw new ServletException(e);
        } finally {
            if (f != null) try { f.close(); } catch(IOException ex) {}
        }
        Iterator keyIter = pr.keySet().iterator();//Iterator객체는 Enumeration객체를 확장시킨 개념의 객체
        while( keyIter.hasNext() ) {//객체를 하나씩 꺼내서 그 객체명으로 Properties객체에 저장된 객체에 접근
            String command = (String)keyIter.next();
            String className = pr.getProperty(command);
            try {
                Class commandClass = Class.forName(className);//해당 문자열을 클래스로 만든다.
                Object commandInstance = commandClass.newInstance();//해당클래스의 객체를 생성
                commandMap.put(command, commandInstance);// Map객체인 commandMap에 객체 저장
            } catch (ClassNotFoundException e) {
                throw new ServletException(e);
            } catch (InstantiationException e) {
                throw new ServletException(e);
            } catch (IllegalAccessException e) {
                throw new ServletException(e);
            }
        }
    }

    public void doGet(//get방식의 서비스 메소드
        HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        requestPro(request, response);
    }

    protected void doPost(//post방식의 서비스 메소드
        HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        requestPro(request, response);
    }

    //시용자의 요청을 분석해서 해당 작업을 처리
    private void requestPro(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
	String view = null;
        CommandAction com=null;
	try {
            String command = request.getRequestURI();
            if (command.indexOf(request.getContextPath()) == 0) {
               command = command.substring(request.getContextPath().length());
            }
            com = (CommandAction)commandMap.get(command); 
	    if (com == null) {
		com = new NullAction();
	    }
            view = com.requestPro(request, response);
        } catch(Throwable e) {
            throw new ServletException(e);
        }  
        RequestDispatcher dispatcher =request.getRequestDispatcher(view);
        dispatcher.forward(request, response);
    }
}

[web.xml] : 기존거는 삭제
<servlet>
	<servlet-name>ControllerUsingURI</servlet-name>
	<servlet-class>ezen.controller.ControllerUsingURI2</servlet-class>
	<init-param>
		<param-name>configFile2</param-name>
		<param-value>/WEB-INF/commandHandlerURI.properties</param-value>
	</init-param>
  </servlet>
	
  <servlet-mapping>
	<servlet-name>ControllerUsingURI</servlet-name>
	<url-pattern>*.do</url-pattern>
  </servlet-mapping>

========================================================================================================

6.Action class
[CommandAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

//요청 파라미터로 명령어를 전달하는 방식의 슈퍼 인터페이스
public interface CommandAction {
    public String requestPro(HttpServletRequest request, HttpServletResponse response)throws Throwable;
}

[NullAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class NullAction implements CommandAction {

	@Override
	public String requestPro(HttpServletRequest request,
			HttpServletResponse response) throws Throwable {
		return "/view/nullCommand.jsp";
	}

}

===================================================================================================

http://localhost:포트번호/플젝이름/MVC/list.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/list.do =====> ezen.action.ListAction(BoardDataBean, BoardDBBean)
3. list.jsp(EL,JSTL)

[ListAction.java]
package ezen.action;

import java.util.Collections;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.board.BoardDBBean;

public class ListAction implements CommandAction {//글목록 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)throws Throwable {
       
        String pageNum = request.getParameter("pageNum");//페이지 번호

        if (pageNum == null) {
            pageNum = "1";
        }
        int pageSize = 10;//한 페이지의 글의 개수
        int currentPage = Integer.parseInt(pageNum);
        int startRow = (currentPage - 1) * pageSize + 1;//한 페이지의 시작글 번호
        int endRow = currentPage * pageSize;//한 페이지의 마지막 글번호
        int count = 0;
        int number=0;

        List articleList = null;
        BoardDBBean dbPro = BoardDBBean.getInstance();//DB연동
        count = dbPro.getArticleCount();//전체 글의 수
       
        if (count > 0) {
            articleList = dbPro.getArticles(startRow, endRow);//현재 페이지에 해당하는 글 목록
        } else {
            articleList = Collections.EMPTY_LIST;
        }

	number=count-(currentPage-1)*pageSize;//글목록에 표시할 글번호
        //해당 뷰에서 사용할 속성
        request.setAttribute("currentPage", new Integer(currentPage));
        request.setAttribute("startRow", new Integer(startRow));
        request.setAttribute("endRow", new Integer(endRow));
        request.setAttribute("count", new Integer(count));
        request.setAttribute("pageSize", new Integer(pageSize));
	request.setAttribute("number", new Integer(number));
        request.setAttribute("articleList", articleList);
       
        return "/MVC/list.jsp";//해당 뷰
    }
}

[/WebContent/MVC/script.js]
function writeSave(){

if(document.writeform.writer.value==""){
  alert("작성자를 입력하십시요.");
  document.writeform.writer.focus();
  return false;
}
if(document.writeform.subject.value==""){
  alert("제목을 입력하십시요.");
  document.writeform.subject.focus();
  return false;
}

if(document.writeform.content.value==""){
  alert("내용을 입력하십시요.");
  document.writeform.content.focus();
  return false;
}
       
if(document.writeform.passwd.value==""){
  alert(" 비밀번호를 입력하십시요.");
  document.writeform.passwd.focus();
  return false;
}
}   

[/WebContent/MVC/style.css]
BODY {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
TD {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
SELECT {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
DIV {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
FORM {
	FONT-SIZE: 9pt; COLOR: black; LINE-HEIGHT: 160%; FONT-FAMILY: 굴림,verdana,tahoma
}
TEXTAREA {
	BORDER-RIGHT: 1px solid #999999; BORDER-TOP: 1px solid #999999; FONT-SIZE: 9pt; BORDER-LEFT: 1px solid #999999 ; COLOR: BLACK; BORDER-BOTTOM: 1px solid #999999; FONT-FAMILY: 굴림,verdana; BACKGROUND-COLOR: white
}
INPUT {
	BORDER-RIGHT: 1px solid #999999; BORDER-TOP: 1px solid #999999; FONT-SIZE: 9pt; BORDER-LEFT: 1px solid #999999; COLOR: BLACK; BORDER-BOTTOM: 1px solid #999999; FONT-FAMILY: 굴림,verdana; HEIGHT: 19px; BACKGROUND-COLOR: white
}

A:link {text-decoration:none;color:#696969}
A:hover{text-decoration:yes;color:#66CCFF}
A:visited {text-decoration:none;color:#330066}

[/WebContent/MVC/color.jspf]
<c:set var="bodyback_c" value="#e0ffff"/>
<c:set var="back_c" value="#8fbc8f"/>
<c:set var="title_c" value="#5f9ea0"/>
<c:set var="value_c" value="#b0e0e6"/>
<c:set var="bar" value="#778899"/>

[/WebContent/MVC/list.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ include file="color.jspf"%>

<html>
<head>
<title>게시판</title>
<link href="style.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="${bodyback_c}">
<center><b>글목록(전체 글:${count})</b>
<table width="700">
  <tr>
    <td align="right" bgcolor="${value_c}">
       <a href="/EZEN/MVC/writeForm.do">글쓰기</a>
    </td>
  </tr>
</table>

<c:if test="${count == 0}">
<table width="700" border="1" cellpadding="0" cellspacing="0">
  <tr>
    <td align="center">
      게시판에 저장된 글이 없습니다.
    </td>
  </tr>
</table>
</c:if>

<c:if test="${count > 0}">
<table border="1" width="700" cellpadding="0" cellspacing="0" align="center">
    <tr height="30" bgcolor="${value_c}">
      <td align="center"  width="50"  >번 호</td>
      <td align="center"  width="250" >제   목</td>
      <td align="center"  width="100" >작성자</td>
      <td align="center"  width="150" >작성일</td>
      <td align="center"  width="50" >조 회</td>
      <td align="center"  width="100" >IP</td>   
    </tr>

   <c:forEach var="article" items="${articleList}">
   <tr height="30">
    <td align="center"  width="50" >
  <c:out value="${number}"/>
  <c:set var="number" value="${number - 1}"/>
</td>
    <td  width="250" >
  <c:if test="${article.re_level > 0}">
  <img src="images/level.gif" width="${5 * article.re_level}" height="16">
    <img src="images/re.gif">
  </c:if>
  <c:if test="${article.re_level == 0}">
    <img src="images/level.gif" width="${5 * article.re_level}" height="16">
  </c:if>
          
      <a href="/EZEN/MVC/content.do?num=${article.num}&pageNum=${currentPage}">
          ${article.subject}</a>
          <c:if test="${article.readcount >= 20}">
            <img src="images/hot.gif" border="0"  height="16">
  </c:if>
</td>
    <td align="center"  width="100">
       <a href="mailto:${article.email}">${article.writer}</a>
</td>
    <td align="center"  width="150">${article.reg_date}
</td>
    <td align="center"  width="50">${article.readcount}</td>
    <td align="center" width="100" >${article.ip}</td>
  </tr>
  </c:forEach>
</table>
</c:if>

<c:if test="${count > 0}">
   <c:set var="pageCount" value="${count / pageSize + ( count % pageSize == 0 ? 0 : 1)}"/>
   <c:set var="pageBlock" value="${10}"/>
   <fmt:parseNumber var="result" value="${currentPage / 10}" integerOnly="true" />
   <c:set var="startPage" value="${result * 10 + 1}" />
   <c:set var="endPage" value="${startPage + pageBlock-1}"/>
   <c:if test="${endPage > pageCount}">
        <c:set var="endPage" value="${pageCount}"/>
   </c:if>
         
   <c:if test="${startPage > 10}">
        <a href="/EZEN/MVC/list.do?pageNum=${startPage - 10 }">[이전]</a>
   </c:if>

   <c:forEach var="i" begin="${startPage}" end="${endPage}">
       <a href="/EZEN/MVC/list.do?pageNum=${i}">[${i}]</a>
   </c:forEach>

   <c:if test="${endPage < pageCount}">
        <a href="/EZEN/MVC/list.do?pageNum=${startPage + 10}">[다음]</a>
   </c:if>
</c:if>

</center>
</body>
</html>

===================================================================================================
http://localhost:포트번호/플젝이름/MVC/writeForm.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/writeForm.do =====> ezen.action.WriteFormAction(BoardDataBean, BoardDBBean)
3. writeForm.jsp(EL,JSTL)

[WriteFormAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class WriteFormAction implements CommandAction {//글 입력 폼 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)throws Throwable {
       //제목글과 답변글의 구분
        int num=0,ref=1,re_step=0,re_level=0; 
        try{ 
          if(request.getParameter("num")!=null){
		 num=Integer.parseInt(request.getParameter("num"));
		 ref=Integer.parseInt(request.getParameter("ref"));
		 re_step=Integer.parseInt(request.getParameter("re_step"));
		 re_level=Integer.parseInt(request.getParameter("re_level"));
	   }
	}catch(Exception e){e.printStackTrace();}
		//해당 뷰에서 사용할 속성
		request.setAttribute("num", new Integer(num));
		request.setAttribute("ref", new Integer(ref));
		request.setAttribute("re_step", new Integer(re_step));
		request.setAttribute("re_level", new Integer(re_level));

		return "/MVC/writeForm.jsp";//해당 뷰
	}
}

[writeForm.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="color.jspf"%>

<html>
<head>
<title>게시판</title>
<link href="style.css" rel="stylesheet" type="text/css">
<script language="JavaScript" src="script.js"></script>
</head>

  
<body bgcolor="${bodyback_c}"> 
<center><b>글쓰기</b>
<br>
<form method="post" name="writeform" action="/SSOL/MVC/writePro.do" onsubmit="return writeSave()">
<input type="hidden" name="num" value="${num}">
<input type="hidden" name="ref" value="${ref}">
<input type="hidden" name="re_step" value="${re_step}">
<input type="hidden" name="re_level" value="${re_level}">

<table width="400" border="1" cellspacing="0" cellpadding="0"  align="center">
   <tr>
    <td align="right" colspan="2" bgcolor="${value_c}">
    <a href="/EZEN/MVC/list.do"> 글목록</a>
   </td>
   </tr>
   <tr>
    <td  width="70"  bgcolor="${value_c}" align="center">이 름</td>
    <td  width="330">
       <input type="text" size="10" maxlength="10" name="writer"></td>
  </tr>
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center" >제 목</td>
    <td  width="330">
<c:if test="${num == 0}">
       <input type="text" size="40" maxlength="50" name="subject"></td>
</c:if>
<c:if test="${num != 0}">
   <input type="text" size="40" maxlength="50" name="subject" value="[답변]"></td>
</c:if>
  </tr>
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center">Email</td>
    <td  width="330">
       <input type="text" size="40" maxlength="30" name="email" ></td>
  </tr>
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center" >내 용</td>
    <td  width="330" >
     <textarea name="content" rows="13" cols="40"></textarea> </td>
  </tr>
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center" >비밀번호</td>
    <td  width="330" >
     <input type="password" size="8" maxlength="12" name="passwd">
</td>
  </tr>
<tr>     
<td colspan=2 bgcolor="${value_c}" align="center">
  <input type="submit" value="글쓰기" > 
  <input type="reset" value="다시작성">
  <input type="button" value="목록보기" OnClick="window.location='/EZEN/MVC/list.do'">
</td></tr></table>   
</form>     
</body>
</html>    

===================================================================================================

http://localhost:포트번호/플젝이름/MVC/writePro.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/writePro.do =====> ezen.action.WriteProAction(BoardDataBean, BoardDBBean)
3. writePro.jsp(EL,JSTL)

[WriteProAction.java]
package ezen.action;

import java.sql.Timestamp;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.board.BoardDataBean;
import ezen.board.BoardDBBean;

public class WriteProAction implements CommandAction {// 입력된 글 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)  throws Throwable {

        request.setCharacterEncoding("euc-kr");//한글 인코딩
       
        BoardDataBean article = new BoardDataBean();//데이터처리 빈
	article.setNum(Integer.parseInt(request.getParameter("num")));
        article.setWriter(request.getParameter("writer"));
        article.setEmail(request.getParameter("email"));
        article.setSubject(request.getParameter("subject"));
        article.setPasswd(request.getParameter("passwd"));
        article.setReg_date(new Timestamp(System.currentTimeMillis()));
	article.setRef(Integer.parseInt(request.getParameter("ref")));
	article.setRe_step(Integer.parseInt(request.getParameter("re_step")));
	article.setRe_level(Integer.parseInt(request.getParameter("re_level")));
	article.setContent(request.getParameter("content"));
	article.setIp(request.getRemoteAddr());

        BoardDBBean dbPro = BoardDBBean.getInstance();//DB처리
        dbPro.insertArticle(article);

        return "/MVC/writePro.jsp";
    }
}

[writePro.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<meta http-equiv="Refresh" content="0;url=/EZEN/MVC/list.do" >

===================================================================================================

http://localhost:포트번호/플젝이름/MVC/content.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/content.do =====> ezen.action.ContentAction(BoardDataBean, BoardDBBean)
3. content.jsp(EL,JSTL)

[ContentAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.board.BoardDataBean;
import ezen.board.BoardDBBean;

public class ContentAction implements CommandAction {//글내용 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)throws Throwable {
       
        int num = Integer.parseInt(request.getParameter("num"));//해당 글번호
        String pageNum = request.getParameter("pageNum");//해당 페이지 번호

        BoardDBBean dbPro = BoardDBBean.getInstance();//DB처리
        BoardDataBean article =  dbPro.getArticle(num);//해당 글번호에 대한 해당 레코드
 
        //해당 뷰에서 사용할 속성
        request.setAttribute("num", new Integer(num));
        request.setAttribute("pageNum", new Integer(pageNum));
        request.setAttribute("article", article);
       
        return "/MVC/content.jsp";//해당 뷰
    }
}

[content.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="color.jspf"%>

<html>
<head>
<title>게시판</title>
<link href="style.css" rel="stylesheet" type="text/css">
<style type='text/css'>
<!--
a:link { color:black; text-decoration:none; }
a:visited {  }
a:active { text-decoration:underline; }
a:hover { text-decoration:underline; background-image:url('text_dottdeline.gif'); background-repeat:repeat-x; background-position:50% 100%; }
-->
</style>
<style>
<!--
@font-face {font-family:굴림; src:url();}
body,td,a,div,p,pre,input,textarea {font-family:굴림;font-size:9pt;}
-->
</style>
</head>

<body bgcolor="${bodyback_c}"> 
<center><b>글내용 보기</b>
<br>
<form>
<table width="500" border="1" cellspacing="0" cellpadding="0" align="center"> 
  <tr height="30">
    <td align="center" width="125" bgcolor="${value_c}">글번호</td>
    <td align="center" width="125" align="center">${article.num}</td>
    <td align="center" width="125" bgcolor="${value_c}">조회수</td>
    <td align="center" width="125" align="center">${article.readcount}</td>
  </tr>
  <tr height="30">
    <td align="center" width="125" bgcolor="${value_c}">작성자</td>
    <td align="center" width="125" align="center">${article.writer}</td>
    <td align="center" width="125" bgcolor="${value_c}" >작성일</td>
    <td align="center" width="125" align="center">${article.reg_date}</td>
  </tr>
  <tr height="30">
    <td align="center" width="125" bgcolor="${value_c}">글제목</td>
    <td align="center" width="375" align="center" colspan="3">${article.subject}</td>
  </tr>
  <tr>
    <td align="center" width="125" bgcolor="${value_c}">글내용</td>
    <td align="left" width="375" colspan="3"><pre>${article.content}</pre></td>
  </tr>
  <tr height="30">     
    <td colspan="4" bgcolor="${value_c}" align="right" >
  <input type="button" value="글수정"
       onclick="document.location.href='/EZEN/MVC/updateForm.do?num=${article.num}&pageNum=${pageNum}'">
   &nbsp;&nbsp;&nbsp;&nbsp;
  <input type="button" value="글삭제"
       onclick="document.location.href='/EZEN/MVC/deleteForm.do?num=${article.num}&pageNum=${pageNum}'">
   &nbsp;&nbsp;&nbsp;&nbsp;
      <input type="button" value="답글쓰기"
       onclick="document.location.href='/EZEN/MVC/writeForm.do?num=${article.num}&ref=${article.ref}&re_step=${article.re_step}&re_level=${article.re_level}'">
   &nbsp;&nbsp;&nbsp;&nbsp;
       <input type="button" value="글목록"
       onclick="document.location.href='/EZEN/MVC/list.do?pageNum=${pageNum}'">
    </td>
  </tr>
</table>   
</form>     
</body>
</html>     

===================================================================================================

http://localhost:포트번호/플젝이름/MVC/updateForm.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/updateForm.do =====> ezen.action.UpdateFormAction(BoardDataBean, BoardDBBean)
3. updateForm.jsp(EL,JSTL)

[UpdateFormAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.board.BoardDataBean;
import ezen.board.BoardDBBean;

public class UpdateFormAction implements CommandAction {//글수정 폼

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response) throws Throwable {

        int num = Integer.parseInt(request.getParameter("num"));
        String pageNum = request.getParameter("pageNum");

        BoardDBBean dbPro = BoardDBBean.getInstance();
        BoardDataBean article =  dbPro.updateGetArticle(num);

	//해당 뷰에서 사용할 속성
        request.setAttribute("pageNum", new Integer(pageNum));
        request.setAttribute("article", article);

        return "/MVC/updateForm.jsp";//해당뷰
    }
}

[updateForm.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="color.jspf"%>

<html>
<head>
<title>게시판</title>
<link href="style.css" rel="stylesheet" type="text/css">
<script language="JavaScript" src="script.js"></script>
</head>

<body bgcolor="${bodyback_c}"> 
<center><b>글수정</b>
<br>
<form method="post" name="writeform" action="/EZEN/MVC/updatePro.do?pageNum=${pageNum}" onsubmit="return writeSave()">
<table width="400" border="1" cellspacing="0" cellpadding="0" align="center">
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center">이 름</td>
    <td align="left" width="330">
       <input type="text" size="10" maxlength="10" name="writer" value="${article.writer}">
   <input type="hidden" name="num" value="${article.num}"></td>
  </tr>
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center" >제 목</td>
    <td align="left" width="330">
       <input type="text" size="40" maxlength="50" name="subject" value="${article.subject}"></td>
  </tr>
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center">Email</td>
    <td align="left" width="330">
       <input type="text" size="40" maxlength="30" name="email" value="${article.email}"></td>
  </tr>
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center" >내 용</td>
    <td align="left" width="330">
     <textarea name="content" rows="13" cols="40">${article.content}</textarea></td>
  </tr>
  <tr>
    <td  width="70"  bgcolor="${value_c}" align="center" >비밀번호</td>
    <td align="left" width="330" >
     <input type="password" size="8" maxlength="12" name="passwd">
</td>
  </tr>
  <tr>     
   <td colspan=2 bgcolor="${value_c}" align="center">
     <input type="submit" value="글수정" > 
     <input type="reset" value="다시작성">
     <input type="button" value="목록보기"
       onclick="document.location.href='/EZEN/MVC/list.do?pageNum=${pageNum}'">
   </td>
</tr>
</table>
</form>
</body>
</html>     

===================================================================================================

http://localhost:포트번호/플젝이름/MVC/updatePro.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/updatePro.do =====> ezen.action.UpdateProAction(BoardDataBean, BoardDBBean)
3. updatePro.jsp(EL,JSTL)

[UpdateProAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.board.BoardDataBean;
import ezen.board.BoardDBBean;

public class UpdateProAction implements CommandAction {

    public String requestPro( HttpServletRequest request,
        HttpServletResponse response) throws Throwable {

        request.setCharacterEncoding("euc-kr");

        String pageNum = request.getParameter("pageNum");

	BoardDataBean article = new BoardDataBean();
        article.setNum(Integer.parseInt(request.getParameter("num")));
        article.setWriter(request.getParameter("writer"));
        article.setEmail(request.getParameter("email"));
        article.setSubject(request.getParameter("subject"));
        article.setContent(request.getParameter("content"));
        article.setPasswd(request.getParameter("passwd"));
   
	BoardDBBean dbPro = BoardDBBean.getInstance();
        int check = dbPro.updateArticle(article);

        request.setAttribute("pageNum", new Integer(pageNum));
        request.setAttribute("check", new Integer(check));

        return "/MVC/updatePro.jsp";
    }
}

[updatePro.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<c:if test="${check==1}">
<meta http-equiv="Refresh" content="0;url=/EZEN/MVC/list.do?pageNum=${pageNum}" >
</c:if>
<c:if test="${check==0}">
비밀번호가 다릅니다.
<br>
<a href="javascript:history.go(-1)">[글수정 폼으로 돌아가기]</a>
</c:if>

===================================================================================================

http://localhost:포트번호/플젝이름/MVC/deleteForm.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/deleteForm.do =====> ezen.action.DeleteFormAction(BoardDataBean, BoardDBBean)
3. deleteForm.jsp(EL,JSTL)

[DeleteFormAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class DeleteFormAction implements CommandAction {//글삭제 폼

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response) throws Throwable {

        int num = Integer.parseInt(request.getParameter("num"));
        String pageNum = request.getParameter("pageNum");

	//해당 뷰에서 사용할 속성
	request.setAttribute("num", new Integer(num));
        request.setAttribute("pageNum", new Integer(pageNum));

        return "/MVC/deleteForm.jsp";//해당뷰
    }
}

[deleteForm.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="color.jspf"%>

<html>
<head>
<title>게시판</title>
<link href="style.css" rel="stylesheet" type="text/css">

<script language="JavaScript">     
<!--     
  function deleteSave(){
if(document.delForm.passwd.value==''){
alert("비밀번호를 입력하십시요.");
document.delForm.passwd.focus();
return false;
}
}   
// -->     
</script>
</head>

<body bgcolor="${bodyback_c}">
<center><b>글삭제</b>
<br>
<form method="POST" name="delForm"  action="/EZEN/MVC/deletePro.do?pageNum=${pageNum}"
   onsubmit="return deleteSave()">
<table border="1" align="center" cellspacing="0" cellpadding="0" width="360">
  <tr height="30">
     <td align=center  bgcolor="${value_c}">
       <b>비밀번호를 입력해 주세요.</b></td>
  </tr>
  <tr height="30">
     <td align=center >비밀번호 :  
       <input type="password" name="passwd" size="8" maxlength="12">
   <input type="hidden" name="num" value="${num}"></td>
</tr>
<tr height="30">
    <td align=center bgcolor="${value_c}">
      <input type="submit" value="글삭제" >
      <input type="button" value="글목록"
       onclick="document.location.href='/EZEN/MVC/list.do?pageNum=${pageNum}'">    
   </td>
</tr> 
</table>
</form>
</body>
</html>

===================================================================================================

http://localhost:포트번호/플젝이름/MVC/deletePro.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /MVC/deletePro.do =====> ezen.action.DeleteProAction(BoardDataBean, BoardDBBean)
3. deletePro.jsp(EL,JSTL)

[DeleteProAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.board.BoardDBBean;

public class DeleteProAction implements CommandAction {//글삭제

    public String requestPro( HttpServletRequest request,
        HttpServletResponse response) throws Throwable {

        request.setCharacterEncoding("euc-kr");

        int num = Integer.parseInt(request.getParameter("num"));
        String pageNum = request.getParameter("pageNum");
        String passwd = request.getParameter("passwd");
   
        BoardDBBean dbPro = BoardDBBean.getInstance();
        int check = dbPro.deleteArticle(num, passwd);

        //해당 뷰에서 사용할 속성
        request.setAttribute("pageNum", new Integer(pageNum));
        request.setAttribute("check", new Integer(check));

        return "/MVC/deletePro.jsp";//해당뷰
    }
}

[deletePro.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<c:if test="${check==1}">
<meta http-equiv="Refresh" content="0;url=/EZEN/MVC/list.do?pageNum=${pageNum}" >
</c:if>
<c:if test="${check==0}">
비밀번호가 다릅니다.
<br>
<a href="javascript:history.go(-1)">[글삭제 폼으로 돌아가기]</a>
</c:if>

*****회원가입 만들기*****
1.패턴 : Model2(MVC)

2.Table : members , zipcode
create table members(
id varchar2(12) not null primary key, //아이디
passwd varchar2(12) not null, //비밀번호
name varchar2(10) not null, //이름
jumin1 varchar2(6) not null, //주민번호앞자리
jumin2 varchar2(7) not null, //주민번호뒷자리
email varchar2(30), //이메일
blog varchar2(50), //블로그,홈페이지
reg_date date not null, //가입날짜.
zipcode varchar2(7) null,
address varchar2(30) null
)

create table zipcode(
zipcode varchar2(7),
area1 varchar2(20),
area2 varchar2(40),
area3 varchar2(40),
area4 varchar2(120)
)   

3.JavaBean
  : 저장빈 : ezen.logon.LogonDataBean, ezen.logon.ZipcodeBean
  : 처리빈 : ezen.logon.LogonDBBean

[LogonDataBean.java]
package ezen.logon;

import java.sql.Timestamp;

public class LogonDataBean{

	private String id;
	private String passwd;
	private String name;
	private String jumin1;
	private String jumin2;
	private String email; 
	private String blog;
	private Timestamp reg_date;
	
	private String zipcode;
	private String address;	
	
	public String getZipcode() {
		return zipcode;
	}
	public void setZipcode(String zipcode) {
		this.zipcode = zipcode;
	}
	public String getAddress() {
		return address;
	}
	public void setAddress(String address) {
		this.address = address;
	}
	
	public String getId() {
		return id;
	}
	public void setId(String id) {
		this.id = id;
	}
	public String getPasswd() {
		return passwd;
	}
	public void setPasswd(String passwd) {
		this.passwd = passwd;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getJumin1() {
		return jumin1;
	}
	public void setJumin1(String jumin1) {
		this.jumin1 = jumin1;
	}
	public String getJumin2() {
		return jumin2;
	}
	public void setJumin2(String jumin2) {
		this.jumin2 = jumin2;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getBlog() {
		return blog;
	}
	public void setBlog(String blog) {
		this.blog = blog;
	}
	public Timestamp getReg_date() {
		return reg_date;
	}
	public void setReg_date(Timestamp reg_date) {
		this.reg_date = reg_date;
	}	
}

[ZipcodeBean.java]
package ezen.logon;

public class ZipcodeBean {
	private String zipcode;
	private String area1;
	private String area2;
	private String area3;
	private String area4;
	
	public String getZipcode() {
		return zipcode;
	}
	public void setZipcode(String zipcode) {
		this.zipcode = zipcode;
	}
	public String getArea1() {
		return area1;
	}
	public void setArea1(String area1) {
		this.area1 = area1;
	}
	public String getArea2() {
		return area2;
	}
	public void setArea2(String area2) {
		this.area2 = area2;
	}
	public String getArea3() {
		return area3;
	}
	public void setArea3(String area3) {
		this.area3 = area3;
	}
	public String getArea4() {
		return area4;
	}
	public void setArea4(String area4) {
		this.area4 = area4;
	}
}

[LogonDBBean.java]
package ezen.logon;

import java.sql.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Vector;

public class LogonDBBean {
	//SingleTon Pattern : LogonDBBean m = LogonDBBean.getInstance();
	private static LogonDBBean instance = new LogonDBBean();
   
    public static LogonDBBean getInstance() {
        return instance;
    }
   
    private LogonDBBean() {
    }
   
    private Connection getConnection() throws Exception {
    	String jdbcDriver = "jdbc:apache:commons:dbcp:/pool";        
    	return DriverManager.getConnection(jdbcDriver);
    }
    //inputPro.jsp에서 회원가입을 할때 사용.
    public void insertMember(LogonDataBean member) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
       
        try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement(
            "insert into MEMBERS(id,passwd,name,jumin1,jumin2,email" +
            ",blog,reg_date,zipcode,address) values (?,?,?,?,?,?,?,?,?,?)");
            pstmt.setString(1, member.getId());
            pstmt.setString(2, member.getPasswd());
            pstmt.setString(3, member.getName());
            pstmt.setString(4, member.getJumin1());
            pstmt.setString(5, member.getJumin2());
            pstmt.setString(6, member.getEmail());
            pstmt.setString(7, member.getBlog());
            pstmt.setTimestamp(8, member.getReg_date());
            pstmt.setString(9, member.getZipcode());
            pstmt.setString(10, member.getAddress());
            pstmt.executeUpdate();
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
    }
    //loginPro.jsp에서 로그온을 시도할때 호출.
    public int userCheck(String id, String passwd) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;    
        ResultSet rs= null;
        String dbpasswd="";
        int x=-1;
        
        try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement(
            "select passwd from MEMBERS where id = ?");
            pstmt.setString(1, id);
            rs= pstmt.executeQuery();

            if(rs.next()){
				dbpasswd= rs.getString("passwd");
				if(dbpasswd.equals(passwd))
					x= 1; //인증 성공
				else
					x= 0; //비밀번호 틀림
			}else
					x= -1;//해당 아이디 없음

        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
        	if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
        return x;
	}
    //confirmId.jsp에서 ID을 체크할때 사용.
	public int confirmId(String id) throws Exception {
		Connection conn = null;
	    PreparedStatement pstmt = null;
	    ResultSet rs= null;
	    int x=-1;
	       
	    try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement("select id from MEMBERS where id = ?");
            pstmt.setString(1, id);
            rs= pstmt.executeQuery();

			if(rs.next())
				x= 1; //해당 아이디 있음
			else
				x= -1;//해당 아이디 없음
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
        	if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
	return x;
	}
	
	//updateMember.jsp에서 수정폼에 가입된 회원의 정보를 보여줄때 사용.
    public LogonDataBean getMember(String id) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        LogonDataBean member=null;
        try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement("select * from MEMBERS where id = ?");
            pstmt.setString(1, id);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                member = new LogonDataBean();
                member.setId(rs.getString("id"));
                member.setPasswd(rs.getString("passwd"));
                member.setName(rs.getString("name"));
                member.setJumin1(rs.getString("jumin1"));
                member.setJumin2(rs.getString("jumin2"));
                member.setEmail(rs.getString("email"));
                member.setBlog(rs.getString("blog"));
                member.setReg_date(rs.getTimestamp("reg_date"));    
                member.setZipcode(rs.getString("zipcode"));
                member.setAddress(rs.getString("address"));
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
        return member;
    }
    
    public List<LogonDataBean> getMemberList(int firstRow, int endRow)
			throws Exception {
    	Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		List<LogonDataBean>  messageList = null;
		LogonDataBean member = null;
		try {
			conn = getConnection();
			pstmt = conn.prepareStatement(
				"select id, name, passwd, jumin1, jumin2, email, blog, reg_date, zipcode, address from ( "
				+ "    select rownum rnum, id, name, passwd, jumin1, jumin2, email, blog, reg_date, zipcode, address from ( "
				+ "        select * from members m order by m.id desc "
				+ "    ) where rownum <= ? "
				+ ") where rnum >= ?");

			pstmt.setInt(1, endRow);
			pstmt.setInt(2, firstRow);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				messageList = new ArrayList<LogonDataBean>();
				do {
					member = new LogonDataBean();
	                member.setId(rs.getString("id"));
	                member.setPasswd(rs.getString("passwd"));
	                member.setName(rs.getString("name"));
	                member.setJumin1(rs.getString("jumin1"));
	                member.setJumin2(rs.getString("jumin2"));
	                member.setEmail(rs.getString("email"));
	                member.setBlog(rs.getString("blog"));
	                member.setReg_date(rs.getTimestamp("reg_date"));    
	                member.setZipcode(rs.getString("zipcode"));
	                member.setAddress(rs.getString("address"));
					messageList.add(member);
				} while (rs.next());
				return messageList;
			} else {
				return Collections.emptyList();
			}
		} finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }	
	}
    
    public int selectCount() throws Exception {
    	Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		try {
			conn = getConnection();
			stmt = conn.createStatement();
			rs = stmt.executeQuery("select count(*) from members");
			rs.next();
			return rs.getInt(1);
		} finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (stmt != null) try { stmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
	}
    
    public void updateMember(LogonDataBean member) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
       
        try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement(
              "update MEMBERS set passwd=?,name=?,email=?,blog=?,zipcode=?,address=? "+
              "where id=?");
            pstmt.setString(1, member.getPasswd());
            pstmt.setString(2, member.getName());
            pstmt.setString(3, member.getEmail());
            pstmt.setString(4, member.getBlog());
            pstmt.setString(5, member.getZipcode());
            pstmt.setString(6, member.getAddress());
            pstmt.setString(7, member.getId());
            
           
            pstmt.executeUpdate();
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
    }
   
    public int deleteMember(String id, String passwd) throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs= null;
        String dbpasswd="";
        int x=-1;
        
        try {
        	conn = getConnection();

            pstmt = conn.prepareStatement(
            "select passwd from MEMBERS where id = ?");
            pstmt.setString(1, id);
            rs = pstmt.executeQuery();
           
			if(rs.next()){
				dbpasswd= rs.getString("passwd");
				if(dbpasswd.equals(passwd)){
					pstmt = conn.prepareStatement("delete from MEMBERS where id=?");
                    pstmt.setString(1, id);
                    pstmt.executeUpdate();
                    x= 1; //회원탈퇴 성공
				}else
					x= 0; //비밀번호 틀림
			}
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
        return x;
    }

    public Vector<ZipcodeBean> zipcodeRead(String area3)  {
        Connection con = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        Vector<ZipcodeBean> vecList = new Vector<ZipcodeBean>();
        try {
            con = getConnection();
            String strQuery = "select * from zipcode where area3 like '"+area3+"%'";
            pstmt = con.prepareStatement(strQuery);
            rs = pstmt.executeQuery();
            while(rs.next()){
                ZipcodeBean tempZipcode = new ZipcodeBean();
                tempZipcode.setZipcode(rs.getString("zipcode"));
                tempZipcode.setArea1(rs.getString("area1"));
                tempZipcode.setArea2(rs.getString("area2"));
                tempZipcode.setArea3(rs.getString("area3"));
                tempZipcode.setArea4(rs.getString("area4"));
                vecList.addElement(tempZipcode);
            }

        }catch(Exception ex) {
            System.out.println("Exception" + ex);
        }finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (con != null) try { con.close(); } catch(SQLException ex) {}
        }
        return vecList;
    }   
}

4.commandHandlerURI.properties 내용 추가
/logon2/main.do=ezen.action.LogonMainAction
/logon2/inputForm.do=ezen.action.LogonInputFormAction
/logon2/inputPro.do=ezen.action.LogonInputProAction
/logon2/confirmId.do=ezen.action.ConfirmIdAction
/logon2/loginForm.do=ezen.action.LoginFormAction
/logon2/loginPro.do=ezen.action.LoginProAction
/logon2/logout.do=ezen.action.LogoutAction
/logon2/modify.do=ezen.action.LogonModifyAction
/logon2/modifyForm.do=ezen.action.LogonModifyFormAction
/logon2/modifyPro.do=ezen.action.LogonModifyProAction
/logon2/deleteForm.do=ezen.action.LogonDeleteFormAction
/logon2/deletePro.do=ezen.action.LogonDeleteProAction

5.Controller
[ControllerUsingURI2.java]
package ezen.controller;

import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Properties;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.action.CommandAction;
import ezen.action.NullAction;

public class ControllerUsingURI2 extends HttpServlet {
   
    private Map commandMap = new HashMap();//명령어와 명령어 처리 클래스를 쌍으로 저장

    //명령어와 처리클래스가 매핑되어 있는 properties 파일을 읽어서 Map객체인 commandMap에 저장
    //명령어와 처리클래스가 매핑되어 있는 properties 파일은 Command.properties파일
    public void init(ServletConfig config) throws ServletException {
	
        String props = config.getInitParameter("configFile2");//web.xml에서 propertyConfig에 해당하는 init-param 의 값을 읽어옴
        Properties pr = new Properties();//명령어와 처리클래스의 매핑정보를 저장할 Properties객체 생성
        FileInputStream f = null;
        try {
            String configFilePath = config.getServletContext().getRealPath(
					props);		
            f = new FileInputStream(configFilePath); //Command.properties파일의 내용을 읽어옴
            pr.load(f);//Command.properties파일의 정보를  Properties객체에 저장
        } catch (IOException e) {
            throw new ServletException(e);
        } finally {
            if (f != null) try { f.close(); } catch(IOException ex) {}
        }
        Iterator keyIter = pr.keySet().iterator();//Iterator객체는 Enumeration객체를 확장시킨 개념의 객체
        while( keyIter.hasNext() ) {//객체를 하나씩 꺼내서 그 객체명으로 Properties객체에 저장된 객체에 접근
            String command = (String)keyIter.next();
            String className = pr.getProperty(command);
            try {
                Class commandClass = Class.forName(className);//해당 문자열을 클래스로 만든다.
                Object commandInstance = commandClass.newInstance();//해당클래스의 객체를 생성
                commandMap.put(command, commandInstance);// Map객체인 commandMap에 객체 저장
            } catch (ClassNotFoundException e) {
                throw new ServletException(e);
            } catch (InstantiationException e) {
                throw new ServletException(e);
            } catch (IllegalAccessException e) {
                throw new ServletException(e);
            }
        }
    }

    public void doGet(//get방식의 서비스 메소드
        HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        requestPro(request, response);
    }

    protected void doPost(//post방식의 서비스 메소드
        HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        requestPro(request, response);
    }

    //시용자의 요청을 분석해서 해당 작업을 처리
    private void requestPro(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
	String view = null;
        CommandAction com=null;
	try {
            String command = request.getRequestURI();
            if (command.indexOf(request.getContextPath()) == 0) {
               command = command.substring(request.getContextPath().length());
            }
            com = (CommandAction)commandMap.get(command); 
	    if (com == null) {
		com = new NullAction();
	    }
            view = com.requestPro(request, response);
        } catch(Throwable e) {
            throw new ServletException(e);
        }  
        RequestDispatcher dispatcher =request.getRequestDispatcher(view);
        dispatcher.forward(request, response);
    }
}

6.Action class
[CommandAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

//요청 파라미터로 명령어를 전달하는 방식의 슈퍼 인터페이스
public interface CommandAction {
    public String requestPro(HttpServletRequest request, HttpServletResponse response)throws Throwable;
}

[NullAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class NullAction implements CommandAction {

	@Override
	public String requestPro(HttpServletRequest request,
			HttpServletResponse response) throws Throwable {
		return "/view/nullCommand.jsp";
	}

}

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/main.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/main.do =====> ezen.action.LogonMainAction(BoardDataBean, BoardDBBean)
3. main.jsp(EL,JSTL)

[LogonMainAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import ezen.action.CommandAction;

public class LogonMainAction implements CommandAction {//회원관리메인 페이지

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)throws Throwable {

        return "/logon2/main.jsp";//해당 뷰
    }
}

[/WebContent/logon2/main.jsp]
<%@ page  contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%>
<html>
<head><title>메인입니다..</title>
<link href="style.css" rel="stylesheet" type="text/css">
</head>


<body bgcolor="${bodyback_c}">

<c:if test="${empty sessionScope.memId}"> //로그인을 안했으면

  <table width=500 cellpadding="0" cellspacing="0"  align="center" border="1" >
      <tr>
       <td width="300" bgcolor="${bodyback_c}" height="20">
       &nbsp;
       </td>
   
       <form name="inform" method="post" action="/MVC_model2_signUp/a/loginPro.do">

        <td bgcolor="${title_c}"  width="100" align="right">아이디</td>
        <td width="100" bgcolor="${value_c}">
            <input type="text" name="id" size="15" maxlength="10"></td>
      </tr>
      <tr > 
         <td rowspan="2" bgcolor="${bodyback_c}" width="300" >메인입니다.</td>
         <td bgcolor="${title_c}"  width="100" align="right">패스워드</td>
         <td width="100" bgcolor="${value_c}">
            <input type="password" name="passwd" size="15" maxlength="10"></td>
       </tr>
       <tr>
          <td colspan="3" bgcolor="${title_c}"   align="center">
            <input type="submit" name="Submit" value="로그인">
            <input type="button"  value="회원가입" onclick="document.location.href='/MVC_model2_signUp/a/inputForm.do'">
          </td></form></tr></table>
     </c:if>

	 <c:if test="${!empty sessionScope.memId}"> //로그인을 했으면
       <table width=500 cellpadding="0" cellspacing="0"  align="center" border="1" >
         <tr>
           <td width="300" bgcolor="${bodyback_c}" height="20">하하하</td>

           <td rowspan="3" bgcolor="${value_c}" align="center">
             ${sessionScope.memId}님이 <br>
             방문하셨습니다
             <form  method="post" action="/MVC_model2_signUp/a/logout.do">  
             <input type="submit"  value="로그아웃">
             <input type="button" value="회원정보변경" onclick="document.location.href='/MVC_model2_signUp/a/modify.do'">
             </form>
         </td>
        </tr>
       <tr > 
         <td rowspan="2" bgcolor="${bodyback_c}" width="300" >메인입니다.</td>
      </tr>
     </table>
     <br>
</c:if>
 </body>
</html>

[실행] http://localhost:8080/EZEN/logon2/main.do

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/inputForm.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/inputForm.do =====> ezen.action.LogonInputFormAction(BoardDataBean, BoardDBBean)
3. inputForm.jsp(EL,JSTL)

[LogonInputFormAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import ezen.action.CommandAction;

public class LogonInputFormAction implements CommandAction {//회원가입 폼 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)throws Throwable {
     
        return "/logon2/inputForm.jsp";//해당 뷰
    }
}

[/WebContent/logon2/inputForm.jsp]
<%@ page contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%>
<html>
<head>
<title>회원가입</title>
<link href="style.css" rel="stylesheet" type="text/css">
<script language="JavaScript">
    
    function checkIt() {
        var userinput = eval("document.userinput");
        if(!userinput.id.value) {
            alert("ID를 입력하세요");
            return false;
        }
        
        if(!userinput.passwd.value ) {
            alert("비밀번호를 입력하세요");
            return false;
        }
        if(userinput.passwd.value != userinput.passwd2.value)
        {
            alert("비밀번호를 동일하게 입력하세요");
            return false;
        }
       
        if(!userinput.name.value) {
            alert("사용자 이름을 입력하세요");
            return false;
        }
        if(!userinput.jumin1.value  || !userinput.jumin2.value )
        {
            alert("주민등록번호를 입력하세요");
            return false;
        }
    }

    // 아이디 중복 여부를 판단
    function openConfirmid(userinput) {
        // 아이디를 입력했는지 검사
        if (userinput.id.value == "") {
            alert("아이디를 입력하세요");
            return;
        }
        // url과 사용자 입력 id를 조합합니다.
        url = "/MVC_model2_signUp/a/confirmId.do?id=" + userinput.id.value ;
        
        // 새로운 윈도우를 엽니다.
        open(url, "confirm", 
        "toolbar=no, location=no,status=no,menubar=no,scrollbars=no,resizable=no,width=550, height=200");
    }
</script>


<body bgcolor="${bodyback_c}">

<form method="post" action="/MVC_model2_signUp/a/inputPro.do" name="userinput" onSubmit="return checkIt()">
  <table width="600" border="1" cellspacing="0" cellpadding="3" align="center" >
    <tr> 
    <td colspan="2" height="39" align="center" bgcolor="${value_c}" >
       <font size="+1" ><b>회원가입</b></font></td>
    </tr>
    <tr> 
      <td width="200" bgcolor="${value_c}"><b>아이디 입력</b></td>
      <td width="400" bgcolor="${value_c}">&nbsp;</td>
    </tr>  

    <tr> 
      <td width="200"> 사용자 ID</td>
      <td width="400"> 
        <input type="text" name="id" size="10" maxlength="12">
        <input type="button" name="confirm_id" value="ID중복확인" OnClick="openConfirmid(this.form)">
      </td>
    </tr>
    <tr> 
      <td width="200"> 비밀번호</td>
      <td width="400" > 
        <input type="password" name="passwd" size="15" maxlength="12">
      </td>
    <tr>  
      <td width="200">비밀번호 확인</td>
      <td width="400"> 
        <input type="password" name="passwd2" size="15" maxlength="12">
      </td>
    </tr>
    
    <tr> 
      <td width="200" bgcolor="${value_c}"><b>개인정보 입력</b></td>
      <td width="400" bgcolor="${value_c}">&nbsp;</td>
    <tr>  
    <tr> 
      <td width="200">사용자 이름</td>
      <td width="400"> 
        <input type="text" name="name" size="15" maxlength="10">
      </td>
    </tr>
    <tr> 
      <td width="200">주민등록번호</td>
      <td width="400"> 
        <input type="text" name="jumin1" size="7" maxlength="6">
        -<input type="text" name="jumin2" size="7" maxlength="7">
      </td>
    </tr>
    <tr> 
      <td width="200">E-Mail</td>
      <td width="400"> 
        <input type="text" name="email" size="40" maxlength="30">
      </td>
    </tr>
    <tr> 
      <td width="200"> Blog</td>
      <td width="400"> 
        <input type="text" name="blog" size="60" maxlength="50">
      </td>
    </tr>
    <tr> 
      <td colspan="2" align="center" bgcolor="${value_c}"> 
          <input type="submit" name="confirm" value="등   록" >
          <input type="reset" name="reset" value="다시입력">
          <input type="button" value="가입안함" onclick="document.location.href='/MVC_model2_signUp/a/main.do'">
      </td>
    </tr>
  </table>
</form>
</body>
</html>

[실행] http://localhost:8080/EZEN/logon2/inputForm.do

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/inputPro.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/inputPro.do =====> ezen.action.LogonInputProAction(BoardDataBean, BoardDBBean)
3. inputPro.jsp(EL,JSTL)

[LogonInputProAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.sql.Timestamp;

import ezen.logon.LogonDataBean;
import ezen.logon.LogonDBBean;
import ezen.action.CommandAction;

public class LogonInputProAction implements CommandAction {//회원가입 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)  throws Throwable {

        request.setCharacterEncoding("euc-kr");//한글 인코딩
        
        LogonDataBean member = new LogonDataBean();//데이터처리 빈
	member.setId(request.getParameter("id"));
        member.setPasswd(request.getParameter("passwd"));
        member.setName(request.getParameter("name"));
        member.setJumin1(request.getParameter("jumin1"));
        member.setJumin2(request.getParameter("jumin2"));
	member.setEmail(request.getParameter("email"));
	member.setBlog(request.getParameter("blog"));
        member.setReg_date(new Timestamp(System.currentTimeMillis()));

        LogonDBBean dbPro = LogonDBBean.getInstance();//DB처리
        dbPro.insertMember(member);

        return "/logon2/inputPro.jsp";//해당 뷰
    }
}


[/WebContent/logon2/inputPro.jsp]
<%@ page contentType="text/html;charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<meta http-equiv="Refresh" content="0;url=/MVC_model2_signUp/a/loginForm.do" >

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/confirmId.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/confirmId.do =====> ezen.action.LogonConfirmIdAction(BoardDataBean, BoardDBBean)
3. confirmId.jsp(EL,JSTL)

[ConfirmIdAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.logon.LogonDBBean;
import ezen.action.CommandAction;

public class ConfirmIdAction implements CommandAction {// 입력된 글 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)  throws Throwable {

        request.setCharacterEncoding("euc-kr");//한글 인코딩
        
        String id = request.getParameter("id");//사용자입력 아이디
		
        LogonDBBean dbPro = LogonDBBean.getInstance();//DB처리
        int check=  dbPro.confirmId(id);

        //해당 뷰에서 사용할 속성
	request.setAttribute("id", id);
	request.setAttribute("check", new Integer(check));

        return "/logon2/confirmId.jsp";//해당 뷰
    }
}

[/WebContent/logon2/confirmId.jsp]
<%@ page contentType="text/html;charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%> 
<html>
<head><title>ID 중복확인</title>
<link href="style.css" rel="stylesheet" type="text/css">


<body bgcolor="${bodyback_c}">
<c:if test="${check == 1}"> 
<table width="270" border="0" cellspacing="0" cellpadding="5">
  <tr bgcolor="${title_c}"> 
    <td height="39">${id} 는 이미 사용중인 아이디입니다.</td>
  </tr>
</table>
<form name="checkForm" method="post" action="/MVC_model2_signUp/a/confirmId.do">
<table width="270" border="0" cellspacing="0" cellpadding="5">
  <tr>
    <td bgcolor="${value_c}" align="center"> 
       다른 아이디를 선택하세요.<p>
       <input type="text" size="10" maxlength="12" name="id"> 
       <input type="submit" value="ID중복확인">
    </td>
  </tr>
</table>
</form>
</c:if>
<c:if test="${check == -1}"> 
<table width="270" border="0" cellspacing="0" cellpadding="5">
  <tr bgcolor="${title_c}"> 
    <td align="center"> 
      <p>입력하신 ${id} 는 사용하실 수 있는 ID입니다. </p>
      <input type="button" value="닫기" onclick="setid()">
    </td>
  </tr>
</table>
</c:if>
</body>
</html>
<script language="javascript">
<!--
  function setid()
    {		
    	opener.document.userinput.id.value="${id}";
	self.close();
   }
-->
</script>

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/loginForm.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/loginForm.do =====> ezen.action.LogonLoginFormAction(BoardDataBean, BoardDBBean)
3. loginForm.jsp(EL,JSTL)

[LoginFormAction.java]
package soldesk.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import ezen.action.CommandAction;

public class LoginFormAction implements CommandAction {//회원인증 폼 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)throws Throwable {
     
        return "/logon2/loginForm.jsp";//해당 뷰
    }
}

[/WebContent/logon2/loginForm.jsp]
<%@ page contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%>
<html>
<head><title>로그인</title>
<link href="style.css" rel="stylesheet" type="text/css">

   <script language="javascript">
     
       function begin(){
         document.myform.id.focus();
       }
       function checkIt(){
         if(!document.myform.id.value){
           alert("이름을 입력하지 않으셨습니다.");
           document.myform.id.focus();
           return false;
         }
         if(!document.myform.passwd.value){
           alert("비밀번호를 입력하지 않으셨습니다.");
           document.myform.passwd.focus();
           return false;
         }
         
       }
    
   </script>
</head>
<BODY onload="begin()" bgcolor="${bodyback_c}">
<form name="myform" action="/MVC_model2_signUp/a/loginPro.do" method="post" onSubmit="return checkIt()">
<TABLE cellSpacing=1 cellPadding=1 width="260" border=1 align="center" >
  
  <TR height="30">
    <TD colspan="2" align="middle" bgcolor="${title_c}"><STRONG>회원로그인</STRONG></TD></TR>
  
  <TR height="30">
    <TD width="110" bgcolor="${title_c}" align=center>아이디</TD>
    <TD width="150" bgcolor="${value_c}" align=center>
       <INPUT type="text" name="id" size="15" maxlength="12"></TD></TR>
  <TR height="30">
    <TD width="110" bgcolor="${title_c}" align=center>비밀번호</TD>
    <TD width="150" bgcolor="${value_c}" align=center>
      <INPUT type=password name="passwd"  size="15" maxlength="12"></TD></TR>
  <TR height="30">
    <TD colspan="2" align="middle" bgcolor="${title_c}" >
      <INPUT type=submit value="로그인"> 
      <INPUT type=reset value="다시입력">
      <input type="button" value="회원가입" onclick="document.location.href='/MVC_model2_signUp/a/inputForm.do'"></TD></TR>
</TABLE>
</form>

</BODY>
</HTML>

[실행] http://localhost:8080/EZEN/logon2/loginForm.do

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/loginPro.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/loginPro.do =====> ezen.action.LogonLoginProAction(BoardDataBean, BoardDBBean)
3. loginPro.jsp(EL,JSTL)

[LoginProAction.java]
package soldesk.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.logon.LogonDBBean;
import ezen.action.CommandAction;

public class LoginProAction implements CommandAction {//회원인증 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)  throws Throwable {

        request.setCharacterEncoding("euc-kr");//한글 인코딩
        
        String id = request.getParameter("id");
	    String passwd  = request.getParameter("passwd");

        LogonDBBean dbPro = LogonDBBean.getInstance();//DB처리
        int check=dbPro.userCheck(id,passwd);

        //해당 뷰에서 사용할 속성
	request.setAttribute("check", new Integer(check));
	request.setAttribute("id", id);


        return "/logon2/loginPro.jsp";//해당 뷰
    }
}


[/WebContent/logon2/loginPro.jsp]
<%@ page contentType = "text/html; charset=euc-kr" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<c:if test="${check==1}">
    <c:set var="memId" value="${id}" scope="session"/>
    <meta http-equiv="Refresh" content="0;url=/MVC_model2_signUp/a/main.do" />
</c:if>
<c:if test="${check==0}">
	<script> 
	  alert("비밀번호가 맞지 않습니다.");
      history.go(-1);
	</script>
</c:if>
<c:if test="${check==-1}">
	<script>
	  alert("아이디가 맞지 않습니다..");
	  history.go(-1);
	</script>
</c:if>

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/logout.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/logout.do =====> ezen.action.LogonLogoutAction(BoardDataBean, BoardDBBean)
3. logout.jsp(EL,JSTL)

[LogoutAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import ezen.action.CommandAction;

public class LogoutAction implements CommandAction {//로그아웃 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)throws Throwable {

        return "/logon2/logout.jsp";//해당 뷰
    }
}


[/WebContent/logon2/logout.jsp]
<%@ page  contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<c:remove var="memId" scope="session"/>
<meta http-equiv="Refresh" content="0;url=/MVC_model2_signUp/a/main.do" />

[실행] http://localhost:8080/EZEN/logon2/logout.do

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/modify.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/modify.do =====> ezen.action.LogonModifyAction(BoardDataBean, BoardDBBean)
3. modify.jsp(EL,JSTL)

[LogonModifyAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import ezen.action.CommandAction;

public class LogonModifyAction implements CommandAction {//회원정보 수정 페이지 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response)throws Throwable {

        return "/logon2/modify.jsp";//해당 뷰
    }
}


[/WebContent/logon2/modify.jsp]
<%@ page contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%>

<html>
<head><title>정보수정</title>
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="${bodyback_c}">
 <table width=500 cellpadding="0" cellspacing="0"  align="center" >
   <tr>
     <td>
      <form name="myform" action="/EZEN/logon2/modifyForm.do" method="post">
        <INPUT type="hidden" name="id" value="${sessionScope.memId}">
	    <INPUT type="submit" value="회원정보 수정">
      </form>
	 </td>
	 <td>
      <form name="myform" action="/EZEN/logon2/deleteForm.do" method="post">
        <INPUT type="hidden" name="id" value="${sessionScope.memId}">
        <INPUT type="submit" value="회원 탈퇴">
      </form>
	 </td>
	 <td>
      <form name="myform" action="/EZEN/logon2/main.do" method="post">
        <INPUT type="submit" value="메인으로">
      </form>
	 </td>
	</tr>
   </table>
</body>
</html>

[실행] http://localhost:8080/EZEN/logon2/modify.do

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/modifyForm.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/modifyForm.do =====> ezen.action.LogonModifyFormAction(BoardDataBean, BoardDBBean)
3. modifyForm.jsp(EL,JSTL)

[LogonModifyFormAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.logon.LogonDataBean;
import ezen.logon.LogonDBBean;
import ezen.action.CommandAction;

public class LogonModifyFormAction implements CommandAction {//회원정보 수정 폼 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response) throws Throwable {

        String id = request.getParameter("id");

        LogonDBBean dbPro = LogonDBBean.getInstance();
        LogonDataBean member =  dbPro.getMember(id);

		//해당 뷰에서 사용할 속성
        request.setAttribute("member", member);

        return "/logon2/modifyForm.jsp";//해당뷰
    }
}


[/WebContent/logon2/modifyForm.jsp]
<%@ page contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%>

<html>
<head>
<title>회원정보수정</title>
<link href="style.css" rel="stylesheet" type="text/css">


<script language="JavaScript">
   <!-- 
    function checkIt() {
        var userinput = eval("document.userinput");
               
        if(!userinput.passwd.value ) {
            alert("비밀번호를 입력하세요");
            return false;
        }
        if(userinput.passwd.value != userinput.passwd2.value)
        {
            alert("비밀번호를 동일하게 입력하세요");
            return false;
        }
       
        if(!userinput.username.value) {
            alert("사용자 이름을 입력하세요");
            return false;
        }
        if(!userinput.jumin1.value  || !userinput.jumin2.value )
        {
            alert("주민등록번호를 입력하세요");
            return false;
        }
    }
-->
</script>

<body bgcolor="${bodyback_c}">
<form method="post" action="/EZEN/logon2/modifyPro.do" name="userinput" onsubmit="return checkIt()">

  <table width="600" border="1" cellspacing="0" cellpadding="3"  align="center">
    <tr > 
      <td  colspan="2" height="39" bgcolor="${title_c}" align="center">
	     <font size="+1" ><b>회원 정보수정</b></font></td>
    </tr>
    <tr>
      <td colspan="2" class="normal" align="center">회원의 정보를 수정합니다.</td>
    </tr>
     <tr> 
      <td width="200" bgcolor="${value_c}"><b>아이디 입력</b></td>
      <td width="400" bgcolor="${value_c}">&nbsp;</td>
    <tr>  

    <tr> 
      <td  width="200"> 사용자 ID</td>
      <td  width="400">${member.id}</td>
	  <input type="hidden" name="id" value="${sessionScope.memId}">
    </tr>
    
     <tr> 
      <td width="200"> 비밀번호</td>
      <td width="400"> 
        <input type="password" name="passwd" size="10" maxlength="10" value="${member.passwd}">
      </td>
    <tr>  
    <tr> 
      <td  width="200" bgcolor="${value_c}"><b>개인정보 입력</b></td>
      <td width="400" bgcolor="${value_c}">&nbsp;</td>
    <tr>  
    <tr> 
      <td   width="200">사용자 이름</td>
      <td  width="400"> 
        <input type="text" name="name" size="15" maxlength="20" value="${member.name}">
      </td>
    </tr>
    <tr> 
      <td width="200">주민등록번호</td>
      <td width="400"> 
        ${member.jumin1}-${member.jumin2}
      </td>
    </tr>
   <tr> 
      <td width="200">E-Mail</td>
      <td width="400">
	    <c:if test="${empty member.email }">
		  <input type="text" name="email" size="40" maxlength="30" >
		</c:if>
		<c:if test="${!empty member.email }">
          <input type="text" name="email" size="40" maxlength="30" value="${member.email}">	
		</c:if>
      </td>
    </tr>
    <tr> 
      <td width="200">Blog</td>
      <td width="400"> 
	    <c:if test="${empty member.blog}">
		  <input type="text" name="blog" size="60" maxlength="50" >
		</c:if>
		<c:if test="${!empty member.blog}">
          <input type="text" name="blog" size="60" maxlength="50" value="${member.blog}">
		</c:if>
      </td>
    </tr>      
    <tr> 
      <td colspan="2" align="center" bgcolor="${value_c}"> 
       <input type="submit" name="modify" value="수   정" >
       <input type="button" value="취  소" onclick="document.location.href='/EZEN/logon2/main.do'">      
      </td>
    </tr>
  </table>
</form>
</body>
</html>

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/modifyPro.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/modifyPro.do =====> ezen.action.LogonModifyProAction(BoardDataBean, BoardDBBean)
3. modifyPro.jsp(EL,JSTL)

[LogonModifyProAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.logon.LogonDataBean;
import ezen.logon.LogonDBBean;
import ezen.action.CommandAction;

public class LogonModifyProAction implements CommandAction {//회원정보수정 처리

    public String requestPro( HttpServletRequest request,
        HttpServletResponse response) throws Throwable {

        request.setCharacterEncoding("euc-kr");

        String id = request.getParameter("id");

	LogonDataBean member = new LogonDataBean();
        member.setPasswd(request.getParameter("passwd"));
        member.setName(request.getParameter("name"));
        member.setEmail(request.getParameter("email"));
        member.setBlog(request.getParameter("blog"));
        member.setId(request.getParameter("id"));
	    
        LogonDBBean dbPro = LogonDBBean.getInstance();
        dbPro.updateMember(member);
        return "/logon2/modifyPro.jsp";//해당 뷰
    }
}


[/WebContent/logon2/modifyPro.jsp]
<%@ page contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%>

<html>
<head>
<title>회원정보수정</title>
<link href="style.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="${bodyback_c}">
<table width="270" border="0" cellspacing="0" cellpadding="5" align="center">
  <tr bgcolor="${title_c}"> 
    <td height="39"  align="center">
	  <font size="+1" ><b>회원정보가 수정되었습니다.</b></font></td>
  </tr>
  <tr>
    <td bgcolor="${value_c}" align="center"> 
      <p>입력하신 내용대로 수정이 완료되었습니다.</p>
    </td>
  </tr>
  <tr>
    <td bgcolor="${value_c}" align="center"> 
      <form>
	    <input type="button" value="메인으로" onclick="document.location.href='/EZEN/logon2/main.do'">
      </form>
      5초후에 메인으로 이동합니다.<meta http-equiv="Refresh" content="5;url=/EZEN/logon2/main.do" >
    </td>
  </tr>
</table>
</body>
</html>

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/deleteForm.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/deleteForm.do =====> ezen.action.LogonDeleteFormAction(BoardDataBean, BoardDBBean)
3. deleteForm.jsp(EL,JSTL)

[LogonDeleteFormAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import ezen.action.CommandAction;

public class LogonDeleteFormAction implements CommandAction {//회원탈퇴 폼 처리

    public String requestPro(HttpServletRequest request,
        HttpServletResponse response) throws Throwable {

        return "/logon2/deleteForm.jsp";//해당뷰
    }
}


[/WebContent/logon2/deleteForm.jsp]
<%@ page contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%>
<html>
<head><title>회원탈퇴</title>
<link href="style.css" rel="stylesheet" type="text/css">

   <script language="javascript">
     <!--
       function begin(){
         document.myform.passwd.focus();
       }

       function checkIt(){
		  if(!document.myform.passwd.value){
           alert("비밀번호를 입력하지 않으셨습니다.");
           document.myform.passwd.focus();
           return false;
         }
	   }   
     -->
   </script>
</head>
<BODY onload="begin()" bgcolor="${bodyback_c}">
<form name="myform" action="/EZEN/logon2/deletePro.do" method="post" onSubmit="return checkIt()">
<TABLE cellSpacing=1 cellPadding=1 width="260" border=1 align="center" >
  
  <TR height="30">
    <TD colspan="2" align="middle" bgcolor="${title_c}">
	  <font size="+1" ><b>회원 탈퇴</b></font></TD></TR>
     
  <TR height="30">
    <TD width="110" bgcolor="${value_c}" align=center>비밀번호</TD>
    <TD width="150" align=center>
      <INPUT type="password" name="passwd"  size="15" maxlength="12">
	  <input type="hidden" name="id" value="${sessionScope.memId}">
	  </TD></TR>
  <TR height="30">
    <TD colspan="2" align="middle" bgcolor="${value_c}" >
      <INPUT type=submit value="회원탈퇴"> 
      <input type="button" value="취  소" onclick="document.location.href='/EZEN/logon2/main.do'"></TD></TR>
</TABLE>
</form>
</BODY>
</HTML>

===================================================================================================

http://localhost:포트번호/플젝이름/logon2/deletePro.do
1. *.do(web.xml) =====> ControllerUsingURI2(Controller) <=== commandHandlerURI.properties
2. /logon2/deletePro.do =====> ezen.action.LogonDeleteProAction(BoardDataBean, BoardDBBean)
3. deletePro.jsp(EL,JSTL)


[LogonDeleteProAction.java]
package ezen.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.logon.LogonDBBean;
import ezen.action.CommandAction;

public class LogonDeleteProAction implements CommandAction {//회원탈퇴 처리

    public String requestPro( HttpServletRequest request,
        HttpServletResponse response) throws Throwable {

        request.setCharacterEncoding("euc-kr");

        String id = request.getParameter("id");
        String passwd = request.getParameter("passwd");
	    
        LogonDBBean dbPro = LogonDBBean.getInstance();
        int check = dbPro.deleteMember(id, passwd);

        //해당 뷰에서 사용할 속성
        request.setAttribute("check", new Integer(check));

        return "/logon2/deletePro.jsp";//해당뷰
    }
}


[/WebContent/logon2/deletePro.jsp]
<%@ page contentType="text/html; charset=euc-kr"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ include file="./color.jspf"%>
<html>
<head>
<title>회원탈퇴</title>
<link href="style.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="${bodyback_c}">
<c:if test="${check==1}">
<c:remove var="memId" scope="session"/>
<form method="post" action="/EZEN/logon2/main.do" name="userinput" >
<table width="270" border="0" cellspacing="0" cellpadding="5" align="center">
  <tr bgcolor="${title_c}"> 
    <td height="39" align="center">
	  <font size="+1" ><b>회원정보가 삭제되었습니다.</b></font></td>
  </tr>
  <tr bgcolor="${value_c}">
    <td align="center"> 
      <p>흑흑.... 서운합니다. 안녕히 가세요.</p>
      <meta http-equiv="Refresh" content="5;url=/EZEN/logon2/main.do" >
    </td>
  </tr>
  <tr bgcolor="${value_c}">
    <td align="center"> 
      <input type="submit" value="확인">
    </td>
  </tr>
</table>
</form>
</c:if>

<c:if test="${check==0}">
	<script> 
	  alert("비밀번호가 맞지 않습니다.");
      history.go(-1);
	</script>
</c:if>

</body>
</html>
